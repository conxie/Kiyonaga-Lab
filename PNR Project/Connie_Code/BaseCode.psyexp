<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.4">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant':'f&quot;{randint(0, 999999):06.0f}&quot;', 'session':'001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[2560, 1440]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="KeoghRevisedRetrocueTask" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="warning" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="MIDDLE_BUTTON" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="0" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="loadExpVar">
      <RoutineSettingsComponent name="loadExpVar" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="loadExpVar" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="loadImages" plugin="None">
        <Param val="#libraries &amp;#10;import numpy as np  # whole numpy lib is available, prepend 'np.'&amp;#10;import pandas as pd&amp;#10;import random&amp;#10;import os  # handy system and path functions&amp;#10;import sys  # to get file system encoding&amp;#10;import glob&amp;#10;import itertools&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;imageFilePath = &quot;C:/Users/cocon/OneDrive/Documents/GitHub/Kiyonaga-Lab/PNR Project/stimuli&quot;&amp;#10;&amp;#10;strMapping = {'cu':'Mycah/cube/',&amp;#10;              'cy':'Mycah/cylinder/',&amp;#10;              'sp':'Mycah/sphere/'}&amp;#10;strMapping_naturalistic = {'cu':'Connie/cube/',&amp;#10;              'cy':'Connie/cylinder/',&amp;#10;              'sp':'Connie/sphere/'}&amp;#10;&amp;#10;def fix_slashes(path_list):&amp;#10;    return [path.replace('\\', '/') for path in path_list]&amp;#10;&amp;#10;&amp;#10;clock = core.Clock()&amp;#10;kb = keyboard.Keyboard()&amp;#10;&amp;#10;#Cue colors&amp;#10;cueColArr = [[64,128,72],[128,64,128]]&amp;#10;cueColDefault = [128,115,96]&amp;#10;cueCorThis = cueColArr[0]&amp;#10;&amp;#10;# Load stimuli (jpg + png)&amp;#10;MycahCube = fix_slashes(glob.glob(imageFilePath+'/Mycah/cube/*.jpg') + glob.glob(imageFilePath+'/Mycah/cube/*.png'))&amp;#10;MycahCylinder = fix_slashes(glob.glob(imageFilePath+'/Mycah/cylinder/*.jpg') + glob.glob(imageFilePath+'/Mycah/cylinder/*.png'))&amp;#10;MycahSphere = fix_slashes(glob.glob(imageFilePath+'/Mycah/sphere/*.jpg') + glob.glob(imageFilePath+'/Mycah/sphere/*.png'))&amp;#10;&amp;#10;ConnieCube = fix_slashes(glob.glob(imageFilePath+'/Connie/cube/*.jpg') + glob.glob(imageFilePath+'/Connie/cube/*.png'))&amp;#10;ConnieCylinder = fix_slashes(glob.glob(imageFilePath+'/Connie/cylinder/*.jpg') + glob.glob(imageFilePath+'/Connie/cylinder/*.png'))&amp;#10;ConnieSphere = fix_slashes(glob.glob(imageFilePath+'/Connie/sphere/*.jpg') + glob.glob(imageFilePath+'/Connie/sphere/*.png'))&amp;#10;&amp;#10;# Combine and shuffle&amp;#10;MycahConnieCube = MycahCube + ConnieCube&amp;#10;random.shuffle(MycahConnieCube)&amp;#10;&amp;#10;MycahConnieCylinder = MycahCylinder + ConnieCylinder&amp;#10;random.shuffle(MycahConnieCylinder)&amp;#10;&amp;#10;MycahConnieSphere = MycahSphere + ConnieSphere&amp;#10;random.shuffle(MycahConnieSphere)&amp;#10;&amp;#10;all_images = MycahConnieCube + MycahConnieCylinder + MycahConnieSphere &amp;#10;&amp;#10;#info for the images&amp;#10;fixSize = np.array([0.12,0.12])#np.array([0.16,0.16])&amp;#10;&amp;#10;#other images  &amp;#10;retrocueMask = visual.ImageStim(&amp;#10;    win,&amp;#10;    image='c:/Users/cocon/OneDrive/Documents/GitHub/Kiyonaga-Lab/PNR Project/visualObj/retroCue.png',  # &lt;- your uploaded image!&amp;#10;    size=fixSize  # adjust size if needed&amp;#10;)&amp;#10;#fixationCross&amp;#10;fixCircMask = visual.ImageStim(&amp;#10;    win,&amp;#10;    image='c:/Users/cocon/OneDrive/Documents/GitHub/Kiyonaga-Lab/PNR Project/visualObj/fixCirc.png',  # &lt;- your uploaded image!&amp;#10;    size=fixSize  # adjust size if needed&amp;#10;)&amp;#10;#cueCircle&amp;#10;cueCircColor = visual.Polygon(win,edges = 4,radius=1,ori = 45,colorSpace = 'rgb255',fillColor=cueColDefault,size= fixSize/2)&amp;#10;&amp;#10;#pathways &amp;#10;saved_image_paths =[]&amp;#10;probeTypePath = &quot;&quot;&amp;#10;&amp;#10;#trial info &amp;#10;blkTotal = 10&amp;#10;trlEachBlk = 20&amp;#10;trlTotal = len(all_images)&amp;#10;trlCnt = 0&amp;#10;trlTotal = blkTotal*trlEachBlk&amp;#10;repsEachCat = int(trlTotal/2)&amp;#10;distractorArr = np.asarray([0]*trlTotal)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="loadImages" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="trialInfo" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="trlTotal = len(all_images)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="trlCnt = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trialInfo" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Instructions">
      <RoutineSettingsComponent name="Instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="instrTxt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instrTxt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Try your best to remember to both images as you will be tested on one of them later on. Press space to start the experiment.&amp;#10;&amp;#10;Press &quot;y&quot; if the third image is a cropped part of the cued image. Press &quot;n&quot; if it is the cropped part of the uncued image. If you believe the 3rd image you see is not a cropped part of any of the images, press &quot;w&quot;.  " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Image_1">
      <RoutineSettingsComponent name="Image_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Image_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="loadImage1" plugin="None">
        <Param val="from psychopy import visual, event, core&amp;#10;import random&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Randomly select an image&amp;#10;chosen_image = all_images[trlCnt]&amp;#10;&amp;#10;# Create an image object&amp;#10;imageStim = visual.ImageStim(win, image=chosen_image, size = (0.25, 0.25))&amp;#10;&amp;#10;# Set the image path for the randomly chosen image&amp;#10;imageStim.setImage(chosen_image.replace(&quot;\\&quot;, &quot;/&quot;))&amp;#10;&amp;#10;# Set the image to auto-draw&amp;#10;imageStim.setAutoDraw(True)&amp;#10;&amp;#10;# Flip the window to display the image&amp;#10;win.flip()&amp;#10;core.wait(0.5)&amp;#10;&amp;#10;# Save the chosen image path to a variable&amp;#10;saved_image_paths.append(chosen_image)&amp;#10;#print(f&quot;Trial {trial + 1}: Chosen image: {chosen_image}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="imageStim.setAutoDraw(False)&amp;#10;win.flip()&amp;#10;&amp;#10;thisExp.addData('image1', saved_image_paths[-1])" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="loadImage1" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="trialRuns_WIP">
      <RoutineSettingsComponent name="trialRuns_WIP" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="trialRuns_WIP" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="trialRuns" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Initialize a list to save chosen image paths&amp;#10;#saved_image_paths = []&amp;#10;&amp;#10;# Run for 5 trials&amp;#10;#for trial in range(5):&amp;#10;#   # Randomly select an image&amp;#10;#    trial_chosen_image = random.choice(images)&amp;#10;#    &amp;#10;#    # Create an image object&amp;#10;#    imageStim = visual.ImageStim(win)&amp;#10;#    &amp;#10;#    # Set the image path for the randomly chosen image&amp;#10;#    imageStim.setImage(chosen_image.replace(&quot;\\&quot;, &quot;/&quot;))&amp;#10;&amp;#10;#    # Flip the window to display the image&amp;#10;#    win.flip()&amp;#10;    &amp;#10;    # Save the chosen image path to a list&amp;#10;#    saved_image_paths.append(chosen_image)&amp;#10;#    print(f&quot;Trial {trial + 1}: Chosen image: {chosen_image}&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trialRuns" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="interstimulus_Interval">
      <RoutineSettingsComponent name="interstimulus_Interval" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="interstimulus_Interval" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="polygon" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="Image_2">
      <RoutineSettingsComponent name="Image_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Image_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Image2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#filtering out images that were previously seen&amp;#10;avaliable_images = [img for img in all_images if img not in saved_image_paths]&amp;#10;&amp;#10;# Randomly select an image&amp;#10;chosen_image = random.choice(avaliable_images)&amp;#10;&amp;#10;# Create an image object&amp;#10;imageStim = visual.ImageStim(win, image = chosen_image, size = (0.25, 0.25))&amp;#10;&amp;#10;# Set the image path for the randomly chosen image&amp;#10;imageStim.setImage(chosen_image.replace(&quot;\\&quot;, &quot;/&quot;))&amp;#10;&amp;#10;# Set the image to auto-draw&amp;#10;imageStim.setAutoDraw(True)&amp;#10;&amp;#10;# Flip the window to display the image&amp;#10;win.flip()&amp;#10;core.wait(0.5)&amp;#10;&amp;#10;# Save the chosen image path to a variable&amp;#10;saved_image_paths.append(chosen_image)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="imageStim.setAutoDraw(False)&amp;#10;win.flip()&amp;#10;&amp;#10;thisExp.addData('image2', saved_image_paths[-1])" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Image2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="delay">
      <RoutineSettingsComponent name="delay" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="delay" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="delayCircle" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="delayCircle" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="endTrl">
      <RoutineSettingsComponent name="endTrl" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="endTrl" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="trlCnt += 1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="postTrialDelay">
      <RoutineSettingsComponent name="postTrialDelay" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="postTrialDelay" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="polygon_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.6078, -0.2784, -0.2784" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="0.6078, -0.2784, -0.2784" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="Cue">
      <RoutineSettingsComponent name="Cue" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Cue" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="retrocueFixed" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/*&amp;#10;think of random.randint()*/&amp;#10;/*&amp;#10;think of if else statement*/&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#randint(inclusive, exclusive)&amp;#10;#saving it to a list for use in probe &amp;#10;cue_select= []&amp;#10;cue_selected = random.randint(0,1)&amp;#10;cue_select.append(cue_selected)&amp;#10;&amp;#10;# if it's 1, on the screen, display &quot;1&quot;. If 2, display &quot;2&quot;&amp;#10;if cue_selected == 1: &amp;#10;    cue_text = &quot;1&quot;&amp;#10;    text_stim = visual.TextStim(win, text=cue_text,&amp;#10;                                pos=(0.0, 0.0), color=(1.0, 1.0, 1.0),&amp;#10;                                colorSpace='rgb', height=0.1, &amp;#10;                                alignHoriz='center', alignVert='center')&amp;#10;&amp;#10;else: &amp;#10;    cue_text = &quot;2&quot;&amp;#10;    text_stim = visual.TextStim(win, text=cue_text,&amp;#10;                                pos=(0.0, 0.0), color=(1.0, 1.0, 1.0),&amp;#10;                                colorSpace='rgb', height=0.1, &amp;#10;                                alignHoriz='center', alignVert='center')&amp;#10; &amp;#10;#creating cue_selected for later use in probe selection &amp;#10;if cue_selected == 1: &amp;#10;    cue1_selected = saved_image_paths[-2]&amp;#10;    cue2_selected = &quot;cue 1 was selected&quot;&amp;#10;else:&amp;#10;    cue2_selected = saved_image_paths[-1]&amp;#10;    cue1_selected = &quot;cue 2 was selected&quot;&amp;#10;&amp;#10;&amp;#10;# Draw the stimulus on the window and flip&amp;#10;text_stim.draw()&amp;#10;win.flip()&amp;#10;&amp;#10;# Show the text for 1 seconds&amp;#10;core.wait(1)  " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Clean up&amp;#10;imageStim.setAutoDraw(False)&amp;#10;win.flip()&amp;#10;&amp;#10;&amp;#10;thisExp.addData('cueType', cue_text)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="retrocueFixed" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Probe_Response">
      <RoutineSettingsComponent name="Probe_Response" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Probe_Response" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="probeFixed" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="'''&amp;#10;Parameters &amp;#10;- `cuedOrUncuded`: 0 + `sameImageOrNot`: 0 --&gt; cropped part of **cued** image &amp;#10;- `cuedOrUncuded`: 0 + `sameImageOrNot`: 1 --&gt; cropped part of image from the same category of **cued** image (EXCLUDE cued image)&amp;#10;- `cuedOrUncuded`: 1 + `sameImageOrNot`: 0 --&gt; cropped part of **uncued** image &amp;#10;- `cuedOrUncuded`: 1 + `sameImageOrNot`: 1 --&gt; cropped part of image from the same category of **uncued** image (EXCLUDE uncued image)&amp;#10;'''&amp;#10;&amp;#10;#setting up random generator&amp;#10;cuedOrUncued = np.random.randint(0,2)&amp;#10;sameImageOrNot = np.random.randint(0,2)&amp;#10;&amp;#10;# decide what kind probe this trial is. Refer to parameters above&amp;#10;if cuedOrUncued == 0:&amp;#10;    probeType = 'cued'&amp;#10;    if sameImageOrNot == 0:&amp;#10;        probeType += 'Same'&amp;#10;    else:&amp;#10;        probeType += 'Diff'&amp;#10;else:&amp;#10;    probeType = 'uncued'&amp;#10;    if sameImageOrNot == 0:&amp;#10;        probeType += 'Same'&amp;#10;    else:&amp;#10;        probeType += 'Diff'&amp;#10;&amp;#10;#saving to pathway &amp;#10;probeTypePath += str(&quot;Trial:&quot;) + str(trlCnt) + &quot; &quot; + probeType + &quot;,&quot;&amp;#10;if isinstance(probeTypePath, str):&amp;#10;    probeTypePath = probeTypePath.split(&quot;,&quot;)&amp;#10;&amp;#10;#initializing empty list to be reused every loop&amp;#10;empty = []&amp;#10;&amp;#10;#defining functions that specify how to select image based on the probeType. &amp;#10;def split(firstSplit, secondSplit, probeType):&amp;#10;    if &quot;Same&quot; in probeType: &amp;#10;        if cue_select[-1] == 1:&amp;#10;&amp;#10;            #indexing out name of image&amp;#10;            base_name = os.path.splitext(os.path.basename(firstSplit))[0] &amp;#10;            for i in all_images:&amp;#10;                #adding to list if basename is found in image paths&amp;#10;                if base_name in os.path.basename(i):&amp;#10;                    empty.append(i)&amp;#10;            if empty: &amp;#10;                #creating image to be shown&amp;#10;                image_file = random.choice(empty)&amp;#10;                imageStim = visual.ImageStim(win, image=image_file, size = (0.25, 0.25))&amp;#10;        else: &amp;#10;            base_name = os.path.splitext(os.path.basename(secondSplit))[0] &amp;#10;            for i in all_images:&amp;#10;                if base_name in os.path.basename(i):&amp;#10;                    empty.append(i)&amp;#10;            if empty:&amp;#10;                image_file = random.choice(empty)&amp;#10;                imageStim = visual.ImageStim(win, image=image_file, size = (0.25, 0.25))&amp;#10;    else:&amp;#10;        if cue_select[-1] == 1:&amp;#10;            base_name = os.path.splitext(os.path.basename(firstSplit))[0] &amp;#10;            for i in all_images:&amp;#10;                #creating a list of pathways that do not have the basename inside it &amp;#10;                if base_name not in os.path.basename(i):&amp;#10;                    empty.append(i)&amp;#10;            if empty:&amp;#10;                #randomly choosing from the list&amp;#10;                image_file = random.choice(empty)&amp;#10;                imageStim = visual.ImageStim(win, image=image_file, size = (0.25, 0.25))&amp;#10;        else:&amp;#10;            base_name = os.path.splitext(os.path.basename(secondSplit))[0] &amp;#10;            for i in all_images:&amp;#10;                if base_name not in os.path.basename(i):&amp;#10;                    empty.append(i)&amp;#10;            if empty:&amp;#10;                image_file = random.choice(empty)&amp;#10;                imageStim = visual.ImageStim(win, image=image_file, size = (0.25, 0.25))&amp;#10;&amp;#10;#setting up image to chosen based on probeType&amp;#10;if probeType == 'cuedSame': &amp;#10;    split(cue1_selected, cue2_selected, probeType)&amp;#10;&amp;#10;elif probeType == 'cuedDiff': &amp;#10;    split(cue1_selected, cue2_selected, probeType)&amp;#10;&amp;#10;elif probeType == &quot;uncuedSame&quot;: &amp;#10;    split(cue2_selected, cue1_selected, probeType)&amp;#10;&amp;#10;elif probeType == &quot;uncuedDiff&quot;: &amp;#10;    split(cue2_selected, cue1_selected, probeType)&amp;#10;&amp;#10;else: &amp;#10;    print(&quot;ruhoh&quot;)&amp;#10;&amp;#10;imageStim.setAutoDraw(True)&amp;#10;win.flip()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#clean up&amp;#10;imageStim.setAutoDraw(False)&amp;#10;win.flip()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="probeFixed" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="letterClicked" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# Main loop for handling image display and key press&amp;#10;mouse = event.Mouse(visible=True, win=win)&amp;#10;&amp;#10;while True:&amp;#10;    # Check for key presses&amp;#10;    keys = event.getKeys()&amp;#10;    if keys:&amp;#10;        key_pressed = keys[0]  # Get the first key pressed&amp;#10;        key_pressed = key_pressed if key_pressed in ('n', 'w', 'y') else None&amp;#10;    &amp;#10;    if key_pressed:&amp;#10;        # Log data&amp;#10;        thisExp.addData('letterClicked', key_pressed)&amp;#10;        break&amp;#10;&amp;#10;    # Draw the image stimulus if it exists&amp;#10;    if 'imageStim' in locals():&amp;#10;        imageStim.draw()&amp;#10;        win.flip()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="letterClicked" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="fixation">
      <RoutineSettingsComponent name="fixation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="fixation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="fixationCircle" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="cueCircColor.setAutoDraw(True)&amp;#10;fixCircMask.setAutoDraw(True)&amp;#10;&amp;#10;clock.reset()&amp;#10;kb.clock.reset()&amp;#10;kb.clearEvents()&amp;#10;&amp;#10;win.flip()&amp;#10;&amp;#10;core.wait(0.5)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="fixationCircle" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="showStimuli">
      <RoutineSettingsComponent name="showStimuli" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="showStimuli" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="stimuliShown" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Create the window&amp;#10;win = visual.Window([800, 600], units=&quot;pix&quot;)&amp;#10;&amp;#10;# Setup your left and right images with adjusted positions&amp;#10;leftImage = visual.ImageStim(win, pos=(-250, 0))  # Adjust position to leave some margin&amp;#10;rightImage = visual.ImageStim(win, pos=(250, 0))  # Adjust position to leave some margin&amp;#10;&amp;#10;# Select images for this trial&amp;#10;selected_images = random.sample(all_images, 2)&amp;#10;leftImage.image = selected_images[0]&amp;#10;rightImage.image = selected_images[1]&amp;#10;&amp;#10;# Load the first image and get its original size&amp;#10;image = visual.ImageStim(win, image=selected_images[0])&amp;#10;image_size = image.size  # Get the original size of the image&amp;#10;aspect_ratio = image_size[0] / image_size[1]  # Aspect ratio (width / height)&amp;#10;&amp;#10;# Define the new size you want for the images (e.g., 350x350), but keep the aspect ratio&amp;#10;new_width = 350  # Smaller width to leave a margin&amp;#10;new_height = new_width / aspect_ratio  # Calculate the new height based on aspect ratio&amp;#10;&amp;#10;# Set the size of both images based on the aspect ratio&amp;#10;leftImage.size = (new_width, new_height)&amp;#10;rightImage.size = (new_width, new_height)&amp;#10;&amp;#10;# Set images to auto-draw&amp;#10;leftImage.setAutoDraw(True)&amp;#10;rightImage.setAutoDraw(True)&amp;#10;# Now your fixation and images are all ready to display&amp;#10;cueCircColor.setAutoDraw(True)&amp;#10;fixCircMask.setAutoDraw(True)&amp;#10;&amp;#10;clock.reset()&amp;#10;kb.clock.reset()&amp;#10;kb.clearEvents()&amp;#10;&amp;#10;win.flip()  # flip once to show everything together&amp;#10;&amp;#10;# --- wait or collect responses here ---&amp;#10;core.wait(2.0)  # e.g., wait for 1 second&amp;#10;&amp;#10;# --- Now turn off images, but KEEP fixation ---&amp;#10;leftImage.setAutoDraw(False)&amp;#10;rightImage.setAutoDraw(False)&amp;#10;&amp;#10;win.flip()  # flip to update (now only fixation will be on screen)&amp;#10;&amp;#10;core.wait(2.0)  # show just the fixation for 500 ms&amp;#10;&amp;#10;# --- Turn everything off before next trial ---&amp;#10;cueCircColor.setAutoDraw(False)&amp;#10;fixCircMask.setAutoDraw(False)&amp;#10;&amp;#10;# Flip to clear everything from the screen&amp;#10;win.flip()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stimuliShown" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="retrocue">
      <RoutineSettingsComponent name="retrocue" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="retrocue" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="retrocue" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# Randomly set retrocue direction (left or right)&amp;#10;retrocue_direction = random.choice([0, 180])  # 0 = right, 180 = left&amp;#10;retrocueMask.ori = retrocue_direction&amp;#10;&amp;#10;cueCircColor.colorSpace = 'rgb255'&amp;#10;cueCircColor.color = cueCorThis&amp;#10;cueCircColor.setAutoDraw(True)&amp;#10;retrocueMask.setAutoDraw(True)&amp;#10;&amp;#10;# Update window to draw the stimuli&amp;#10;win.flip()&amp;#10;&amp;#10;# Wait to make sure the image stays on screen&amp;#10;core.wait(2.0)&amp;#10;&amp;#10;# Turn off auto-drawing after display time&amp;#10;retrocueMask.setAutoDraw(False)&amp;#10;&amp;#10;# Update window to clear the stimuli&amp;#10;win.flip()&amp;#10;&amp;#10;clock.reset()&amp;#10;kb.clock.reset()&amp;#10;kb.clearEvents()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="retrocue" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="testingSession">
      <RoutineSettingsComponent name="testingSession" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="testingSession" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="mouseWheel" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="polygon = visual.Polygon(win, edges=6, size=(0.5, 0.5), fillColor='blue', lineColor='white')&amp;#10;&amp;#10;while True:&amp;#10;    # Get scroll input&amp;#10;    wheel = event.mouseWheelRel[1]&amp;#10;&amp;#10;    if wheel &gt; 0:&amp;#10;        new_size = polygon.size[0] + 0.1&amp;#10;        polygon.size = (new_size, new_size)&amp;#10;    elif wheel &lt; 0:&amp;#10;        new_size = max(0.1, polygon.size[0] - 0.1)&amp;#10;        polygon.size = (new_size, new_size)&amp;#10;&amp;#10;    polygon.draw()&amp;#10;    win.flip()&amp;#10;&amp;#10;    # Close if escape key pressed&amp;#10;    if 'escape' in event.getKeys():&amp;#10;        break&amp;#10;&amp;#10;    core.wait(0.01)&amp;#10;&amp;#10;win.close()&amp;#10;core.quit()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mouseWheel" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="loadExpVar"/>
    <Routine name="fixation"/>
    <Routine name="showStimuli"/>
    <Routine name="retrocue"/>
    <Routine name="testingSession"/>
  </Flow>
</PsychoPy2experiment>
